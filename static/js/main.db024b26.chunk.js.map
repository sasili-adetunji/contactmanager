{"version":3,"sources":["context.js","components/contact/Contact.jsx","components/contact/Contacts.js","components/layout/Header.jsx","components/layout/TextInputGroup.js","components/contact/AddContact.js","components/contact/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","reponse","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","username","className","onClick","style","cursor","bind","color","float","to","marginRight","Contacts","Fragment","key","Header","branding","defaultProps","TextInputGroup","label","onChange","placeholder","error","htmlFor","classnames","prototypes","PropTypes","string","isRequired","func","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","res","history","push","EditContact","match","params","updateContact","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db024b26.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                    contact.id !== action.payload\n                )\n            }\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            }\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === action.payload.id ?\n                    (contact = action.payload) : contact\n                )\n            }\n        default:\n            return state\n\n    }\n\n}\n\nexport class Provider extends Component {\n\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount () {\n        const reponse = await axios\n        .get('https://jsonplaceholder.typicode.com/users/')\n\n        this.setState({contacts: reponse.data})\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from '../../context'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    }\n\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({type: 'DELETE_CONTACT', payload: id})\n    }\n\n    render() {\n        const {name, email, phone, id, username} = this.props.contact\n        const { showContactInfo } = this.state\n        return (\n            <Consumer>\n\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div className=\"card card-body mb-3\">\n                        <h4>{name}{' '}\n                        <i\n                            onClick={() =>\n                                this.setState({\n                                    showContactInfo: !this.state.showContactInfo})\n                            }\n                            className=\"fas fa-sort-down\"\n                            style={{cursor: 'pointer'}}\n                        />\n                        <i\n                            onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                            className=\"fas fa-times\"\n                            style={{cursor: 'pointer', color:'red', float: 'right'}}\n                        />\n                        <Link to={`contact/edit/${id}`}>\n                            <i\n                                className=\"fas fa-pencil-alt\"\n                                style={{\n                                    float: \"right\",\n                                    color: \"black\",\n                                    marginRight: \"1rem\",\n                                    cursor: \"pointer\"\n                                }}\n                            />\n                        </Link>\n                        </h4>\n                        { showContactInfo ? (\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                                <li className=\"list-group-item\">Username: {username}</li>\n\n                            </ul>\n                        ) : ''}\n                    </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;\n\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\">\n                                <span className=\"text-danger\"> Contacts </span> List\n                            </h1>\n                            { contacts.map(contact =>\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            )\n                        }\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n    const { branding } = props\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <Link to=\"/\" className=\"navbar-brand\"> {branding}</Link>\n        </div>\n        <div>\n            <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">\n                    <i className=\"fas fa-home\"></i>Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/about\" className=\"nav-link\">\n                    <i className=\"fas fa-question\"></i>About </Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link to=\"/contact/add\" className=\"nav-link\">\n                    <i className=\"fas fa-plus\"></i> Add</Link>\n                </li>\n            </ul>\n        </div>\n        </nav>\n    )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\nexport default  Header;\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\n const TextInputGroup = ({\n     label,\n     name,\n     type,\n     onChange,\n     placeholder,\n     value,\n     error\n }) => {\n         return (<div className=\"form-group\">\n             <label htmlFor={name}>{label}</label>\n             <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder} value={value} onChange={onChange}\n            />\n             { error && <div className=\"invalid-feedback\"> {error} </div> }\n         </div>\n         );\n     }\n\nTextInputGroup.prototypes = {\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios'\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = (e) => this.setState({\n        [e.target.name]: e.target.value\n    })\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state\n\n        if (name === '') {\n            this.setState({errors: { name: 'Name is required'}\n            })\n            return;\n        }\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required'}\n            })\n            return;\n        }\n        if (phone === '') {\n            this.setState({errors: {phone: 'Email is required'}\n            })\n            return;\n        }\n        const newContact = {\n            phone,\n            email,\n            name,\n        }\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n        this.props.history.push('/')\n\n\n    }\n\n    render() {\n        const {name, email, phone, errors } = this.state\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div>\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Add Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        placeholder=\"Enter name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        name=\"name\"\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        name=\"email\"\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        type=\"text\"\n                                        placeholder=\"Enter phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        name=\"phone\"\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Add Contact\"\n                                        className=\"btn btn-block btn-light\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n            }}\n            </Consumer>\n        )\n    }\n}\n\nexport default  AddContact;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context'\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios'\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onChange = (e) => this.setState({\n        [e.target.name]: e.target.value\n    })\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n        const contact = res.data\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone,\n        })\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone} = this.state\n\n        if (name === '') {\n            this.setState({errors: { name: 'Name is required'}\n            })\n            return;\n        }\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required'}\n            })\n            return;\n        }\n        if (phone === '') {\n            this.setState({errors: {phone: 'Email is required'}\n            })\n            return;\n        }\n        const { id } = this.props.match.params;\n        const updateContact = {\n            name, email, phone\n        }\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data})\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n        this.props.history.push('/')\n\n\n    }\n\n    render() {\n        const {name, email, phone, errors } = this.state\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value\n                    return (\n                        <div>\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">\n                                Edit Contact\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label=\"Name\"\n                                        placeholder=\"Enter name...\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        name=\"name\"\n                                        error={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter email...\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        name=\"email\"\n                                        error={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label=\"Phone\"\n                                        type=\"text\"\n                                        placeholder=\"Enter phone...\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        name=\"phone\"\n                                        error={errors.phone}\n                                    />\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Update Contact\"\n                                        className=\"btn btn-block btn-light\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    )\n            }}\n            </Consumer>\n        )\n    }\n}\n\nexport default  EditContact;\n","import React from 'react'\n\nconst About = () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple app to manage Contact</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n\nexport default About;\n","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1 className=\"display-4\">\n                <span className=\"text-danger\"> 404 </span> Page not found\n            </h1>\n            <p> Sorry that page does not exist </p>\n        </div>\n    )\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Contacts from './components/contact/Contacts';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Provider } from './context';\nimport AddContact from './components/contact/AddContact';\nimport EditContact from './components/contact/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' component={Contacts}/>\n            <Route exact path='/contact/add' component={AddContact}/>\n            <Route exact path='/contact/edit/:id' component={EditContact}/>\n\n            <Route exact path='/about' component={About}/>\n            <Route component={NotFound}/>\n\n          </Switch>\n        </div>\n      </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}